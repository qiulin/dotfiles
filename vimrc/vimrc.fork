nmap <leader>w :w<CR>
nmap <leader>q :q<CR>
" nmap <leader>sh :VimShell<CR>
" nmap <leader>be :BufExplorer<CR>
" nmap <leader>h :UpdateTypesFile<CR>
" nmap <leader>tn :tabnew<CR>
let g:tagbar_width = 20

set linespace=1
set guioptions-=r
"set guifont=Source\ Code\ Pro\ Powerline\ 13
set guifont=Ubuntu\ Mono\ 13
set nospell
set shell=/bin/zsh

" for golang
let g:tagbar_type_go = {
            \ 'ctagstype' : 'go',
            \ 'kinds'     : [
            \ 'p:package',
            \ 'i:imports:1',
            \ 'c:constants',
            \ 'v:variables',
            \ 't:types',
            \ 'n:interfaces',
            \ 'w:fields',
            \ 'e:embedded',
            \ 'm:methods',
            \ 'r:constructor',
            \ 'f:functions'
            \ ],
            \ 'sro' : '.',
            \ 'kind2scope' : {
            \ 't' : 'ctype',
            \ 'n' : 'ntype'
            \ },
            \ 'scope2kind' : {
            \ 'ctype' : 't',
            \ 'ntype' : 'n'
            \ },
            \ 'ctagsbin'  : 'gotags',
            \ 'ctagsargs' : '-sort -silent'
            \ }


" ruby
autocmd FileType ruby compiler ruby

autocmd FileType int-* call s:interactive_settings()
function! s:interactive_settings()
endfunction

" pymode
let g:pymode_rope_lookup_project = 0


let g:NERDSpaceDelims = 1


set cinoptions=^0,p0,t0,C0,(0

"" cscope
set cscopequickfix=s-,c-,d-,i-,t-,e-
set cst
set csto=0

set cursorcolumn

map <c-f> :call JsBeautify()<cr>
" or
autocmd FileType javascript noremap <buffer>  <c-f> :call JsBeautify()<cr>
" for html
autocmd FileType html noremap <buffer> <c-f> :call HtmlBeautify()<cr>
" for css or scss
autocmd FileType css noremap <buffer> <c-f> :call CSSBeautify()<cr>"

let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplBuffersNeeded = 1
let g:miniBufExplSplitToEdge = 1



nnoremap <leader>fa :call CscopeFindInteractive(expand('<cword>'))<CR>
nnoremap <leader>l :call ToggleLocationList()<CR>
" s: Find this C symbol
nnoremap  <leader>fs :call CscopeFind('s', expand('<cword>'))<CR>
" g: Find this definition
nnoremap  <leader>fg :call CscopeFind('g', expand('<cword>'))<CR>
" d: Find functions called by this function
nnoremap  <leader>fd :call CscopeFind('d', expand('<cword>'))<CR>
" c: Find functions calling this function
nnoremap  <leader>fc :call CscopeFind('c', expand('<cword>'))<CR>
" t: Find this text string
nnoremap  <leader>ft :call CscopeFind('t', expand('<cword>'))<CR>
" e: Find this egrep pattern
nnoremap  <leader>fe :call CscopeFind('e', expand('<cword>'))<CR>
" f: Find this file
nnoremap  <leader>ff :call CscopeFind('f', expand('<cword>'))<CR>
" i: Find files #including this file
nnoremap  <leader>fi :call CscopeFind('i', expand('<cword>'))<CR>


